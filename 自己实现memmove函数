void* my_memmove(void* dest, const void* src,int count)
{
	assert(dest && src);
	void* ret = dest;
	if (dest > src)//从后向前拷贝
	{
		while (count)
		{
			count--;
			*(((char*)dest) + count) = *(((char*)src) + count);
		}
	}
	//从前向后拷贝
	else
	{
		while (count)
		{
			count--;
			*((char*)dest)++ = *((char*)src)++;
		}
	}
	return ret;
}

int main()
{
	//将1，2，3，4，5拷贝到3，4，5，6，7的内存中去
	int arr[] = { 1,2,3,4,5,6,7,8,9,10 };
	//memmove函数处理内存重叠的情况
	//printf("%p\n", arr);
	//printf("%p\n", &arr[0]);
	int i = 0;
	int len = sizeof(arr) / sizeof(arr[0]);
	//从后向前拷贝
	//my_memmove(arr + 2, arr, 20);
	//for (i = 0; i < len; i++)
	//{
	//	printf("%d ", arr[i]);
	//}
	//从前向后拷贝
	my_memmove(arr, arr + 2, 20);
	for (i = 0; i < len; i++)
	{
		printf("%d ", arr[i]);
	}
	return 0;
}
